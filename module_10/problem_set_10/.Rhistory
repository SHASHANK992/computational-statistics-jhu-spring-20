orthogonal <- read.csv('Orthogonal.txt')
orthogonal
head(orthogonal)
orthogonal <- read.csv('Orthogonal.txt', header = FALSE)
plot(1:1e3, orthogonal)
plot(orthogonal)
plot(1:nrow(orthogonal), orthogonal)
hist(orthogonal)
orthogonal
hist(orthogonal)
type(orthogonal)
typeof(orthogonal)
orthogonal[1]
orthogonal <- orthogonal[1]
hist(orthogonal)
orthogonal <- read.csv('Orthogonal.txt', header = FALSE)
typeof(orthogonal)
typeof(orthogonal[[1]])
orthogonal <- orthogonal[[1]]
hist(orthogonal)
plot(1:nrow(orthogonal), orthogonal)
plot(1:length(orthogonal), orthogonal)
q0 <- function(x) {
(pi / 2)^(-1/2)
}
q1 <- function(x) {
x * ((pi / 8)^(-1 / 2))
}
q2 <- function(x) {
((x^2) - (1 / 4)) / (sqrt(pi / 32))
}
q3 <- function(x) {
((x^3) - (x / 2)) / sqrt(pi / 128)
}
### Q5
f <- function(x) {
if ((x >= -1) & (x <= 0)) {
(x + 1) + (x + 1)^3
} else if ((x > 0) & (x <= 1)) {
4 + (x - 1) + (x - 1)^3
} else {
0
}
}
f(1)
x = 0
(x + 1) + (x + 1)^3
f(10)
xs <- seq(-2, 2, length.out = 1e4)
plot(xs, f(xs))
f_vec <- Vectorize(f)
plot(xs, f_vec(xs))
plot(xs, f_vec(xs), type = 'l')
xs <- seq(-1.1, 1.1, length.out = 1e4)
f_vec <- Vectorize(f)
plot(xs, f_vec(xs), type = 'l')
x=0
4 + (x - 1) + (x - 1)^3
(x + 1) + (x + 1)^3
(pi/2)^(-1/2)
orthogonal <- read.csv('Orthogonal.txt', header = FALSE)
orthogonal <- orthogonal[[1]]
hist(orthogonal)
plot(1:length(orthogonal), orthogonal)
q0 <- function(x) {
(pi / 2)^(-1/2)
}
q1 <- function(x) {
x * ((pi / 8)^(-1 / 2))
}
q2 <- function(x) {
((x^2) - (1 / 4)) / (sqrt(pi / 32))
}
q3 <- function(x) {
((x^3) - (x / 2)) / sqrt(pi / 128)
}
q0(orthogonal)
q0 <- function(x) {
(pi / 2)^(-1/2)
}
orthogonal
q0(orthogonal)
c0 <- mean(q0(orthogonal))
q1(orthogonal)
c1 <- mean(q1(orthogonal))
c2 <- mean(q2(orthogonal))
c3 <- mean(q3(orthogonal))
f <- function(x) {
c0 * q0(x) + c1 * q1(x) + c2 * q2(x) + c3 * q3(x)
}
f(orthogonal)
hist((x^3-x/2))
hist(f(orthogonal))
xs <- runif(n = 1e3, min = -1, max = 1)
hist(f(xs))
xs <- seq(-1, 1, length.out = 1e2)
plot(xs, f(xs))
plot(xs, f(xs), type = 'l')
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
xs <- seq(-3, 3, length.out = 1e2)
plot(xs, f(xs), type = 'l', ylim = c(-0.5, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
plot(xs, f(xs), type = 'l', ylim = c(-0.6, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
plot(xs, f(xs), type = 'l', ylim = c(-1, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
plot(xs, f(xs), type = 'l', ylim = c(-1, 1.5))
plot(xs, f(xs), type = 'l', ylim = c(-3, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
range(f(xs))
plot(xs, f(xs), type = 'l', ylim = c(-15, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
xs <- seq(-3, 3, length.out = 1e2)
plot(xs, f(xs), type = 'l', ylim = c(0, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
plot(xs, f(xs), type = 'l', ylim = c(0, 1.3))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
plot(xs, f(xs), type = 'l', ylim = c(0, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
f <- function(x) {
c0 * q0(x) + c1 * q1(x) + c2 * q2(x)
# c0 * q0(x) + c1 * q1(x) + c2 * q2(x) + c3 * q3(x)
}
xs <- seq(-3, 3, length.out = 1e2)
plot(xs, f(xs), type = 'l', ylim = c(0, 1.5))
lines(xs, dnorm(xs, mean = 0, sd = 0.3), col = 'red')
# part (b)
s0 <- function(x) {
(1 / 12) * ((x - 1)^3) + (5 / 12) * (x - 1) + (2 - x)
}
s1 <- function(x) {
(1 /12) * ((3 - x)^3) + (1 / 3) * (x - 2) + (5 / 12) * (3 - x)
}
s2 <- function(x) {
(1 / 4) * (x - 3) + (1 / 3) * (4 - x)
}
s0(1)
s0(1) == s0(2)
s0(2)
s0(2) == s1(2)
s1(3) == s2(3)
s1(3)
s2(4)
seq(1,2,100)
seq(1,2,0.1)
x = c(seq(1,2,0.1), seq(2,3,0.1), seq(3,4,0.1))
y = c(s0(seq(1,2,0.1)), s1(seq(2,3,0.1))), s2(seq(3,4,0.1)))
y = c(s0(seq(1,2,0.1)), s1(seq(2,3,0.1))), s2(seq(3,4,0.1))))
y = c(s0(seq(1,2,0.1)), s1(seq(2,3,0.1)), s2(seq(3,4,0.1)))
plot(x,y)
b = 0.01
x = c(seq(1,2,b), seq(2,3,b), seq(3,4,b))
y = c(s0(seq(1,2,b)), s1(seq(2,3,b)), s2(seq(3,4,b)))
plot(x,y, type = 'l')
abline(v = 1, col='r')
abline(v = 1, col='red')
abline(v = 2, col='red')
abline(v = 3, col='red')
abline(v = 4, col='red')
