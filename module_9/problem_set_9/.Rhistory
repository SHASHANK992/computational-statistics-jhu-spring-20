abline(h = 0)
abline(h = 0)
plot(xs, dunif(xs, 0, 1e4), type = 'l', ylim = c(0, 0.00014))
abline(h = 0)
segments(x0 = c(0,10), y0 = 0, x1 = c(0,10), y1 = dunif(xs, 0, 1e4))
theta <- 10
set.seed(999)
unif_sample <- runif(n = 1e2, min = 0, max = theta)
unif_sample
unif_sample
set.seed(999)
unif_sample <- runif(n = 1e1, min = 0, max = theta)
unif_sample
plot(1:10, unif_sample)
length(unif_sample)
sample(unif_sample, size = length(unif_sample), replace = TRUE)
plot(1:10, sample(unif_sample, size = length(unif_sample), replace = TRUE))
theta_hat <- max(unif_sample)
theta_hat
theta = theta_hat
B = 1e4
sample_size = 10
unif_sample <- runif(n = sample_size, min = 0, max = theta)
data_matrix <- matrix(NA, nrow = B, ncol = sample_size)
theta_matrix <- matrix(NA, nrow = B)
set.seed(999)
unif_sample <- runif(n = sample_size, min = 0, max = theta)
data_matrix <- matrix(NA, nrow = B, ncol = sample_size)
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(unif_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- max(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(mean(unif_sample), 4),
' Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
sample_size = 100
set.seed(999)
unif_sample <- runif(n = sample_size, min = 0, max = theta)
data_matrix <- matrix(NA, nrow = B, ncol = sample_size)
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(unif_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- max(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(mean(unif_sample), 4),
' Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
theta_hat
unif_bootstrap <- function(sample_size = 100, B = 1e4, theta = theta_hat) {
set.seed(999) # Set seed
unif_sample <- runif(n = sample_size, min = 0, max = theta) # Original sample
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(unif_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- max(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(max(unif_sample), 4),
' Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
}
unif_bootstrap <- function(sample_size = 100, B = 1e4, theta = theta_hat) {
set.seed(999) # Set seed
unif_sample <- runif(n = sample_size, min = 0, max = theta) # Original sample
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(unif_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- max(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(max(unif_sample), 4),
' Mean Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
}
1e1
unif_bootstrap(sample_size = 1e1, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e2, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e3, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e4, B = 1e4, theta = theta_hat)
density(theta_matrix)
plot(density(theta_matrix))
lines(exp(B))
exp(B)
exp(1)
exp(2)
exp(10)
exp(8)
unif_bootstrap(sample_size = 1e1, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e2, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e3, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e4, B = 1e4, theta = theta_hat)
par(mfrow = c(2,2))
unif_bootstrap(sample_size = 1e1, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e2, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e3, B = 1e4, theta = theta_hat)
unif_bootstrap(sample_size = 1e4, B = 1e4, theta = theta_hat)
unif_bootstrap <- function(sample_size = 100, B = 1e4, theta_max = 10) {
set.seed(999) # Set seed
unif_sample <- runif(n = sample_size, min = 0, max = theta_max) # Original sample
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(unif_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- max(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(max(unif_sample), 4),
' Mean Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
}
par(mfrow = c(2,2))
unif_bootstrap(sample_size = 1e1, B = 1e4)
unif_bootstrap(sample_size = 1e2, B = 1e4)
unif_bootstrap(sample_size = 1e3, B = 1e4)
unif_bootstrap(sample_size = 1e4, B = 1e4)
79.99 + 96.95 + 55.07 + 63.49 + 36.66 + 44.09 + 54.78 + 72.14 + 121.39 + 84.67 + 66.39 + 214.88 + 74.09 + 45.37 + 18.17
### Problem 4
# part (a)
set.seed(999)
1e2
random_sample <- rnorm(n = 1e2, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
sample_mean
# part (b)
B <- 10
1e2
# part (b)
B <- 1e1
length(random_sample)
data_matrix <- matrix(NA, nrow = B, ncol = length(random_sample)) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
sample_size <- 1e2
### Problem 4
# part (a)
set.seed(999)
sample_size <- 1e2
random_sample <- rnorm(n = sample_size, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
sample_mean
# part (b)
B <- 1e1
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(max(unif_sample), 4),
' Mean Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
dev.off()
hist(theta_matrix, main = paste('Histogram of the Maximum Order Statistic (n=',sample_size,')'),
xlab = 'Bootstrap Maximum Order Statistic',
sub = paste('Original Max. Order Statistic:', round(max(unif_sample), 4),
' Mean Bootstrap Max. Order Statistic:', round(mean(theta_matrix), 4)))
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
theta_matrix
mu_bar_star <- mean(theta_matrix)
mu_bar_star
mu_bar_star <- sample_mean
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
mu_bar_star
sample_mean
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
theta_matrix - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
sample_mean
disc_sample <- c(sample_mean, 0.00436085609316768, -0.06182533,
-0.03198329, -0.0667562, 0.1880102, 0.08023113)
disc_sample
mean(disc_sample)
var(disc_sample)
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
mu_bar_star
theta_matrix
random_sample
theta_matrix
head(random_sample, 20)
mean(head(random_sample, 20))
hist(random_sample)
hist(disc_sample)
hist(theta_matrix)
# part (c)
data_matrix
dim(data_matrix)
random_sample
dim(random_sample)
length(random_sample)
# part (c)
rep(random_sample, B)
length(rep(random_sample, B))
# part (c)
concat_B <- rep(random_sample, B)
seeds <- 1:B
seeds
balanced_bootstrap <- matrix(NA, nrow = B, ncol = sample_size)
for (i in seeds) {
set.seed(i)
balanced_bootstrap[i,] <- sample(concat_B, size = sample_size, replace = FALSE)
}
dim(balanced_bootstrap)
balanced_bootstrap
a = balanced_bootstrap
# Reference: https://stackoverflow.com/questions/59701387/how-to-run-same-model-multiple-times-with-different-set-seed-in-r
seeds <- 1:B
balanced_bootstrap <- matrix(NA, nrow = B, ncol = sample_size)
for (i in seeds) {
set.seed(i)
balanced_bootstrap[i,] <- sample(concat_B, size = sample_size, replace = FALSE)
}
a == balanced_bootstrap
balanced_bootstrap <- matrix(NA, nrow = B, ncol = sample_size)
for (i in seeds) {
set.seed(i)
balanced_bootstrap[i,] <- sample(concat_B, size = sample_size, replace = FALSE)
theta_matrix[i] <- mean(balanced_bootstrap[i,])
}
theta_matrix
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
hist(theta_matrix, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Balanced Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
mu_bar_star
# part (a)
set.seed(999)
sample_size <- 1e2
random_sample <- rnorm(n = sample_size, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
# part (b)
B <- 1e1
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (b)
B <- 1e1
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = FALSE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
### Problem 4
# part (a)
set.seed(999)
sample_size <- 1e2
random_sample <- rnorm(n = sample_size, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
# part (b)
B <- 1e1
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (c)
concat_B <- rep(random_sample, B)
# Reference: https://stackoverflow.com/questions/59701387/how-to-run-same-model-multiple-times-with-different-set-seed-in-r
seeds <- 1:B
balanced_bootstrap <- matrix(NA, nrow = B, ncol = sample_size)
for (i in seeds) {
set.seed(i)
balanced_bootstrap[i,] <- sample(concat_B, size = sample_size, replace = FALSE)
theta_matrix[i] <- mean(balanced_bootstrap[i,])
}
theta_matrix
hist(theta_matrix, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
### Problem 4
# part (a)
set.seed(999)
sample_size <- 1e2
random_sample <- rnorm(n = sample_size, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
# part (b)
B <- 1e1
# part (b)
B <- 1e2
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
mu_bar_star
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (c)
concat_B <- rep(random_sample, B)
# Reference: https://stackoverflow.com/questions/59701387/how-to-run-same-model-multiple-times-with-different-set-seed-in-r
seeds <- 1:B
balanced_bootstrap <- matrix(NA, nrow = B, ncol = sample_size)
for (i in seeds) {
set.seed(i)
balanced_bootstrap[i,] <- sample(concat_B, size = sample_size, replace = FALSE)
theta_matrix[i] <- mean(balanced_bootstrap[i,])
}
theta_matrix
hist(theta_matrix, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
mu_bar_star
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
wow it's a lot nicecr to type with this thing here'
lol
can you believe how nice it feels
### Problem 4
# part (a)
set.seed(999)
sample_size <- 1e2
random_sample <- rnorm(n = sample_size, mean = 0, sd = 1)
sample_mean <- mean(random_sample)
# part (b)
B <- 1e2
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
set.seed(999) # Set seed
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (b)
B <- 1e1
B
# part (b)
B <- 1e1
set.seed(999) # Set seed
data_matrix <- matrix(NA, nrow = B, ncol = sample_size) # Initialize variables
theta_matrix <- matrix(NA, nrow = B)
for (i in 1:B) { # Bootstrap sample
data_matrix[i,] <- sample(random_sample, size = sample_size, replace = TRUE)
theta_matrix[i] <- mean(data_matrix[i,])
}
hist(theta_matrix, main = paste('Histogram of the Sample Mean (n=',sample_size,')'),
xlab = 'Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(theta_matrix), 4)))
set.seed(999) # Set seed
mu_bar_star <- mean(theta_matrix)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (c)
concat_B <- rep(random_sample, B)
# Reference: https://stackoverflow.com/questions/59701387/how-to-run-same-model-multiple-times-with-different-set-seed-in-r
seeds <- 1:B
dim(concat_B)
length(concat_B)
balanced_bootstrap <- sample(concat_B, size = length(concat_B), replace = FALSE)
dim(balanced_bootstrap)
length(balanced_bootstrap)
balanced_groups <- split(balanced_bootstrap, rep_len(1:B, length(balanced_bootstrap)))
balanced_groups[[1]]
length(balanced_groups)
head(balanced_groups)
dim(balanced_groups)
length(balanced_groups)
dim(balanced_groups[[1]])
length(balanced_groups[[1]])
length(balanced_groups[[2]])
length(balanced_groups[[3]])
length(balanced_groups[[10]])
length(balanced_groups[[11]])
lapply(balanced_groups, mean)
balanced_theta_list <- lapply(balanced_groups, mean)
unlist(balanced_theta_list)
balanced_theta <- unlist(lapply(balanced_groups, mean))
balanced_theta
names(balanced_theta) <- NULL
hist(balanced_theta, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(balanced_theta), 4)))
mu_bar_star <- mean(balanced_theta)
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
mu_bar_star <- mean(balanced_theta)
mu_bar_star
mu_bar_star - sample_mean
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
# part (c)
concat_B <- rep(random_sample, B) # create n*B vector
# part (c)
set.seed(999)
# part (c)
concat_B <- rep(random_sample, B) # create n*B vector
set.seed(999)
balanced_bootstrap <- sample(concat_B, # permute n*B vector
size = length(concat_B), replace = FALSE)
# Reference: https://stackoverflow.com/questions/3318333/split-a-vector-into-chunks-in-r
balanced_groups <- split(balanced_bootstrap, # split into B groups
rep_len(1:B, length(balanced_bootstrap)))
balanced_theta <- unlist(lapply(balanced_groups, mean)) # calculate theta for each
names(balanced_theta) <- NULL
hist(balanced_theta, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(balanced_theta), 4)))
mu_bar_star <- mean(balanced_theta)
mu_bar_star
mean(random_sample)
mu_bar_star - sample_mean
balanced_theta
2 * sample_mean - mu_bar_star
(1 / (B - 1)) * sum((theta_matrix - mu_bar_star)^2)
2 * sample_mean - mu_bar_star
hist(balanced_theta, main = paste('Histogram of the Balanced Sample Mean (n=',sample_size,')'),
xlab = 'Balanced Bootstrap Sample Mean',
sub = paste('Original Sample Mean:', round(sample_mean, 4),
' Mean Bootstrap Sample Mean:', round(mean(balanced_theta), 4)))
balanced_theta
mean(balanced_theta)
mu_bar_star
mean(balanced_theta)
